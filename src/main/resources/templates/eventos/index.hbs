{{#partial "contenido"}}
	<script src="/js/eventos.js"></script>
	<link rel="stylesheet" href="/css/eventos.css">
    <h1 class="text-center mb-4">Eventos</h1>

    {{#each this}}
    	<input type = "hidden" class="id_value" value="{{id}}"/>
    	<input type = "hidden" class="titulo_value" value="{{titulo}}"/>
    	<input type = "hidden" class="fecha_inicio_value" value="{{fechaInicio}}"/>
    	<input type = "hidden" class="fecha_fin_value" value="{{fechaFin}}"/>
    	<input type = "hidden" class="tipo_evento_value" value="{{tipoEvento}}"/>
    {{/each}}

<link href="https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i" rel="stylesheet">

<script>

	$(document).ready(function() {
	    var date = new Date();
		var d = date.getDate();
		var m = date.getMonth();
		var y = date.getFullYear();
		
		/*  className colors
		
		className: default(transparent), important(red), chill(pink), success(green), info(blue)
		
		*/		
		
		  
		/* initialize the external events
		-----------------------------------------------------------------*/
	
		$('#external-events div.external-event').each(function() {
		
			// create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
			// it doesn't need to have a start or end
			var eventObject = {
				title: $.trim($(this).text()) // use the element's text as the event title
			};
			
			// store the Event Object in the DOM element so we can get to it later
			$(this).data('eventObject', eventObject);
			
			// make the event draggable using jQuery UI
			$(this).draggable({
				zIndex: 999,
				revert: true,      // will cause the event to go back to its
				revertDuration: 0  //  original position after the drag
			});
			
		});
	
	
		/* initialize the calendar
		-----------------------------------------------------------------*/
		
		var list_ids = document.getElementsByClassName("id_value");
		var list_titulos = document.getElementsByClassName("titulo_value");
		var list_fechaInicio = document.getElementsByClassName("fecha_inicio_value");
		var list_fechaFin = document.getElementsByClassName("fecha_fin_value");
		var list_tipoEvento = document.getElementsByClassName("tipo_evento_value");
		
		var eventos_size = 0
		Array.prototype.forEach.call(list_ids, function(el) {
			console.log('Date: ' + new Date(list_fechaInicio[eventos_size].value).getMonth()) 
    		eventos_size = eventos_size + 1
    		
		});
		
		var eventos = []
		
		for(var i = 0; i < eventos_size; i++){
			anio_inicio = new Date(list_fechaInicio[i].value).getFullYear()
			mes_inicio = new Date(list_fechaInicio[i].value).getMonth()
			dia_inicio = new Date(list_fechaInicio[i].value).getDate()
			hora_inicio = new Date(list_fechaInicio[i].value).getHours()
			minutos_inicio = new Date(list_fechaInicio[i].value).getMinutes()
			
			anio_fin = new Date(list_fechaFin[i].value).getFullYear()
			mes_fin = new Date(list_fechaFin[i].value).getMonth()
			dia_fin = new Date(list_fechaFin[i].value).getDate()
			hora_fin = new Date(list_fechaInicio[i].value).getHours()
			minutos_fin = new Date(list_fechaInicio[i].value).getMinutes()
			
			un_evento = {
				id: parseInt(list_ids[i].value),
				title: list_titulos[i].value,
				start: new Date(anio_inicio, mes_inicio, dia_inicio, hora_inicio, minutos_inicio),
				end: new Date(anio_fin, mes_fin, dia_fin, hora_fin, minutos_fin),
				url: '/eventos/' + list_ids[i].value + '/sugerencias',
				className: 'info',
				allDay: false
			}
			
			eventos.push(un_evento)
		}
		
		var calendar =  $('#calendar').fullCalendar({
			header: {
				left: 'title',
				center: 'agendaDay,agendaWeek,month',
				right: 'prev,next today'
			},
			editable: true,
			firstDay: 1, //  1(Monday) this can be changed to 0(Sunday) for the USA system
			selectable: true,
			defaultView: 'month',
			
			axisFormat: 'h:mm',
			columnFormat: {
                month: 'ddd',    // Mon
                week: 'ddd d', // Mon 7
                day: 'dddd M/d',  // Monday 9/7
                agendaDay: 'dddd d'
            },
            titleFormat: {
                month: 'MMMM yyyy', // September 2009
                week: "MMMM yyyy", // September 2009
                day: 'MMMM yyyy'                  // Tuesday, Sep 8, 2009
            },
			allDaySlot: false,
			selectHelper: true,
			select: function(start, end, allDay) {
				location.href="/eventos/new"
			},
			droppable: true, // this allows things to be dropped onto the calendar !!!
			drop: function(date, allDay) { // this function is called when something is dropped
			
				// retrieve the dropped element's stored Event Object
				var originalEventObject = $(this).data('eventObject');
				
				// we need to copy it, so that multiple events don't have a reference to the same object
				var copiedEventObject = $.extend({}, originalEventObject);
				
				// assign it the date that was reported
				copiedEventObject.start = date;
				copiedEventObject.allDay = allDay;
				
				// render the event on the calendar
				// the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
				$('#calendar').fullCalendar('renderEvent', copiedEventObject, true);
				
				// is the "remove after drop" checkbox checked?
				if ($('#drop-remove').is(':checked')) {
					// if so, remove the element from the "Draggable Events" list
					$(this).remove();
				}
				
			},
			
			events: eventos,		
		});
		
	});

</script>


<div id='wrap'>

<div id='calendar'></div>

<div style='clear:both'></div>
</div>


{{/partial}}

{{>layout.hbs}}